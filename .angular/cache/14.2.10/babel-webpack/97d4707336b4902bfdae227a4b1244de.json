{"ast":null,"code":"import { select } from \"@ngrx/store\";\nimport { invokeAPI } from \"../store/dashboard.action\";\nimport { selectDashboard } from \"../store/dashboard.selector\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/icon\";\n\nfunction DashboardComponent_td_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\", 4)(2, \"table\")(3, \"tr\")(4, \"table\")(5, \"tr\")(6, \"td\");\n    i0.ɵɵtext(7, \" Virtual Machine \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"tr\")(12, \"td\", 5)(13, \"mat-icon\", 6);\n    i0.ɵɵtext(14, \"check_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"td\");\n    i0.ɵɵelement(17, \"img\", 7);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r1.name, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r1.status, \" \");\n  }\n}\n\nfunction DashboardComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, DashboardComponent_td_4_div_1_Template, 18, 2, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", currentTargetAsset_r1 != null);\n  }\n}\n\nexport class DashboardComponent {\n  constructor(store) {\n    this.store = store;\n    this.targetAssets$ = this.store.pipe(select(selectDashboard));\n  }\n\n  ngOnInit() {\n    this.store.dispatch(invokeAPI());\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"dashboard\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"card\"], [1, \"status\"], [1, \"statusColor\"], [\"src\", \"assets/images/imac.png\", \"alt\", \"mac\", 1, \"image\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\")(3, \"tr\");\n      i0.ɵɵtemplate(4, DashboardComponent_td_4_Template, 2, 1, \"td\", 2);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.targetAssets$));\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.MatCard, i4.MatIcon, i2.AsyncPipe],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  margin: 5px;\\n}\\n\\n.image[_ngcontent-%COMP%] {\\n  width: 60px;\\n}\\n\\n.statusGreen[_ngcontent-%COMP%] {\\n  color: green;\\n}\\n\\n.statusError[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.status[_ngcontent-%COMP%] {\\n  vertical-align: middle;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCIiwiZmlsZSI6ImRhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQge1xuICBtYXJnaW46IDVweDtcbn1cblxuLmltYWdlIHtcbiAgd2lkdGg6IDYwcHg7XG59XG5cbi5zdGF0dXNHcmVlbiB7XG4gIGNvbG9yOiBncmVlbjtcbn1cblxuLnN0YXR1c0Vycm9yIHtcbiAgY29sb3I6IHJlZDtcbn1cblxuLnN0YXR1cyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG59XG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAA8B,aAA9B;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;;;;;;;ICeoBC,4BAAwC,CAAxC,EAAwC,UAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,OAAxC,EAAwC,CAAxC,EAAwC,IAAxC,EAAwC,CAAxC,EAAwC,OAAxC,EAAwC,CAAxC,EAAwC,IAAxC,EAAwC,CAAxC,EAAwC,IAAxC;IAM6BA;IAAgBA;IAEzBA,2BAAI,CAAJ,EAAI,IAAJ;IACSA;IAA4BA;IAErCA,4BAAI,EAAJ,EAAI,IAAJ,EAAI,CAAJ,EAAI,EAAJ,EAAI,UAAJ,EAAI,CAAJ;IAEsCA;IAAYA;IAC1CA;IACJA;IAGRA;IACIA;IACJA;;;;;IAXaA;IAAAA;IAKDA;IAAAA;;;;;;IAhBhCA;IAEIA;IAyBJA;;;;;IAzBUA;IAAAA;;;;ADR1B,OAAM,MAAOC,kBAAP,CAAyB;EAC7BC,YAAoBC,KAApB,EAAgC;IAAZ;IACpB,qBAAgB,KAAKA,KAAL,CAAWC,IAAX,CAAgBP,MAAM,CAACE,eAAD,CAAtB,CAAhB;EADoC;;EAGpCM,QAAQ;IACN,KAAKF,KAAL,CAAWG,QAAX,CAAoBR,SAAS,EAA7B;EACD;;AAN4B;;;mBAAlBG,oBAAkBD;AAAA;;;QAAlBC;EAAkBM;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV/BX,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,OAAvB,EAAuB,CAAvB,EAAuB,IAAvB;MAgBgBA;;MA4BJA;;;;MA5BuCA;MAAAA","names":["select","invokeAPI","selectDashboard","i0","DashboardComponent","constructor","store","pipe","ngOnInit","dispatch","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/dashboard/view/dashboard.component.ts","/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/dashboard/view/dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { invokeAPI } from \"../store/dashboard.action\";\nimport { selectDashboard } from \"../store/dashboard.selector\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private store: Store) {}\n  targetAssets$ = this.store.pipe(select(selectDashboard));\n\n  ngOnInit(): void {\n    this.store.dispatch(invokeAPI());\n  }\n}\n","<div class=\"container\">\n    <div class=\"dashboard\">\n        <!-- <form (ngSubmit)=\"add(taskNgForm)\" #taskNgForm=\"ngForm\" #form>\n            <div class=\"input-group\">\n                <input #newTaskNgModel=\"ngModel\" required minlength=\"4\" name=\"taskTitle\" type=\"text\" placeholder=\"Todo\"\n                    [(ngModel)]=\"newTask.title\" />\n                <button [disabled]=\"!form.checkValidity()\" class=\"add-button\">+</button>\n            </div>\n            <div *ngIf=\"newTaskNgModel.invalid && (newTaskNgModel.touched || newTaskNgModel.dirty)\"\n                class=\"validation-error\">\n                <div *ngIf=\"newTaskNgModel.errors?.['required']\"> Task title is required. </div>\n                <div *ngIf=\"newTaskNgModel.errors?.['minlength']\"> Task title must at least have 4 characters. </div>\n            </div>\n        </form> -->\n        <table>\n            <tr>\n                <td *ngFor=\"let currentTargetAsset of targetAssets$ | async;\">\n                    <!-- <app-target-asset [targetAsset]=\"currentTargetAsset\"></app-target-asset> -->\n                    <div *ngIf=\"currentTargetAsset != null\">\n                        <mat-card class=\"card\">\n                            <table>\n                                <tr>\n                                    <table>\n                                        <tr>\n                                            <td> Virtual Machine </td>\n                                        </tr>\n                                        <tr>\n                                            <td> {{currentTargetAsset.name}} </td>\n                                        </tr>\n                                        <tr>\n                                            <td class=\"status\">\n                                                <mat-icon class=\"statusColor\">check_circle</mat-icon>\n                                                {{currentTargetAsset.status}}\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <td>\n                                        <img src=\"assets/images/imac.png\" class=\"image\" alt=\"mac\">\n                                    </td>\n                                </tr>\n                            </table>\n                        </mat-card>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module"}