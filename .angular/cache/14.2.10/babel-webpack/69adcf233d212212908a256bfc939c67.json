{"ast":null,"code":"import { select } from \"@ngrx/store\";\nimport { invokeAPI } from \"../store/dashboard.action\";\nimport { selectDashboard } from \"../store/dashboard.selector\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"@angular/material/icon\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"@angular/material/divider\";\n\nfunction DashboardComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"p\");\n    i0.ɵɵtext(2, \" sdfds\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nfunction DashboardComponent_div_1_td_4_div_1_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"mat-icon\", 13);\n    i0.ɵɵtext(2, \"check_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r3.status, \" \");\n  }\n}\n\nfunction DashboardComponent_div_1_td_4_div_1_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 8)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"error \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r3 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"statusStopped\", currentTargetAsset_r3.status == \"Stopped\")(\"statusError\", currentTargetAsset_r3.status != \"Stopped\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r3.status, \" \");\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    id: a0\n  };\n};\n\nconst _c1 = function (a1) {\n  return [\"/dashboard/assets/\", a1];\n};\n\nfunction DashboardComponent_div_1_td_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\", 5)(2, \"table\")(3, \"tr\")(4, \"table\")(5, \"tr\")(6, \"td\");\n    i0.ɵɵtext(7, \" Virtual Machine \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"tr\");\n    i0.ɵɵtemplate(12, DashboardComponent_div_1_td_4_div_1_td_12_Template, 5, 1, \"td\", 6);\n    i0.ɵɵtemplate(13, DashboardComponent_div_1_td_4_div_1_td_13_Template, 5, 5, \"td\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵelement(15, \"img\", 7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"tr\")(17, \"td\", 8)(18, \"mat-icon\");\n    i0.ɵɵtext(19, \"developer_board\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 9);\n    i0.ɵɵtext(21, \" CPUs \");\n    i0.ɵɵelementStart(22, \"div\", 10);\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"td\", 8)(25, \"mat-icon\");\n    i0.ɵɵtext(26, \"memory icon\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 9);\n    i0.ɵɵtext(28, \" RAM \");\n    i0.ɵɵelementStart(29, \"div\", 10);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(31, \"tr\")(32, \"td\");\n    i0.ɵɵelement(33, \"mat-divider\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"tr\")(35, \"button\", 12);\n    i0.ɵɵtext(36, \" View details\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r3 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r3.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", currentTargetAsset_r3.status == \"Running\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", currentTargetAsset_r3.status != \"Running\");\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r3.cpu, \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.calculateRam(currentTargetAsset_r3.ram), \" MB\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(8, _c1, i0.ɵɵpureFunction1(6, _c0, currentTargetAsset_r3.id)));\n  }\n}\n\nfunction DashboardComponent_div_1_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, DashboardComponent_div_1_td_4_div_1_Template, 37, 10, \"div\", 4);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", currentTargetAsset_r3 != null);\n  }\n}\n\nfunction DashboardComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"table\")(3, \"tr\");\n    i0.ɵɵtemplate(4, DashboardComponent_div_1_td_4_Template, 2, 1, \"td\", 3);\n    i0.ɵɵpipe(5, \"async\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx_r1.targetAssets$));\n  }\n}\n\nexport class DashboardComponent {\n  constructor(store) {\n    this.store = store;\n    this.loading$ = false;\n    this.targetAssets$ = this.store.pipe(select(selectDashboard));\n  }\n\n  calculateRam(ram) {\n    return Math.round(ram * 0.000001);\n  }\n\n  ngOnInit() {\n    this.loading$ = false;\n    this.store.dispatch(invokeAPI());\n    this.loading$ = false;\n  }\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.Store));\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"app-dashboard\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"container\", 4, \"ngIf\"], [1, \"container\"], [1, \"dashboard\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"card\"], [\"class\", \"vertical-align\", 4, \"ngIf\"], [\"src\", \"assets/images/imac.png\", \"alt\", \"mac\", 1, \"image\"], [1, \"vertical-align\"], [1, \"status\"], [1, \"cpu\"], [1, \"divider\"], [\"mat-raised-button\", \"\", 1, \"button\", 3, \"routerLink\"], [1, \"statusGreen\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DashboardComponent_div_0_Template, 3, 0, \"div\", 0);\n      i0.ɵɵtemplate(1, DashboardComponent_div_1_Template, 6, 3, \"div\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.targetAssets$ == null);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.targetAssets$ != null);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf, i3.RouterLink, i4.MatButton, i5.MatIcon, i6.MatCard, i7.MatDivider, i2.AsyncPipe],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  margin: 5px;\\n  width: 240px;\\n}\\n\\n.image[_ngcontent-%COMP%] {\\n  width: 60px;\\n  margin-left: 20px;\\n}\\n\\n.statusGreen[_ngcontent-%COMP%] {\\n  color: green;\\n}\\n\\n.statusError[_ngcontent-%COMP%] {\\n  color: red;\\n}\\n\\n.statusStopped[_ngcontent-%COMP%] {\\n  color: orange;\\n}\\n\\n.status[_ngcontent-%COMP%] {\\n  margin-left: 5px;\\n}\\n\\n.vertical-align[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n}\\n\\nimg[_ngcontent-%COMP%] {\\n  padding-left: 5px;\\n}\\n\\n.cpu[_ngcontent-%COMP%] {\\n  font-weight: 700;\\n}\\n\\n.divider[_ngcontent-%COMP%] {\\n  margin-top: 10px;\\n  margin-bottom: 10px;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n  align-items: center;\\n  margin-top: 25px;\\n}\\n\\n.divCenter[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxVQUFVO0FBQ1o7O0FBRUE7RUFDRSxhQUFhO0FBQ2Y7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jYXJkIHtcbiAgbWFyZ2luOiA1cHg7XG4gIHdpZHRoOiAyNDBweDtcbn1cblxuLmltYWdlIHtcbiAgd2lkdGg6IDYwcHg7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xufVxuXG4uc3RhdHVzR3JlZW4ge1xuICBjb2xvcjogZ3JlZW47XG59XG5cbi5zdGF0dXNFcnJvciB7XG4gIGNvbG9yOiByZWQ7XG59XG5cbi5zdGF0dXNTdG9wcGVkIHtcbiAgY29sb3I6IG9yYW5nZTtcbn1cblxuLnN0YXR1cyB7XG4gIG1hcmdpbi1sZWZ0OiA1cHg7XG59XG5cbi52ZXJ0aWNhbC1hbGlnbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbmltZyB7XG4gIHBhZGRpbmctbGVmdDogNXB4O1xufVxuXG4uY3B1IHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuLmRpdmlkZXIge1xuICBtYXJnaW4tdG9wOiAxMHB4O1xuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xufVxuXG4uYnV0dG9uIHtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLXRvcDogMjVweDtcbn1cblxuLmRpdkNlbnRlciB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xufVxuIl19 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAA8B,aAA9B;AAEA,SAASC,SAAT,QAA0B,2BAA1B;AACA,SAASC,eAAT,QAAgC,6BAAhC;;;;;;;;;;;;ICJAC,+BAAqD,CAArD,EAAqD,GAArD;IACQA;IAAKA;;;;;;IA+B+BA,8BAA0E,CAA1E,EAA0E,UAA1E,EAA0E,EAA1E;IACkCA;IAAYA;IAC1CA;IAAqBA;IAA8BA;;;;;IAA9BA;IAAAA;;;;;;IAEzBA,8BAA0E,CAA1E,EAA0E,UAA1E;IAEqEA;IACjEA;IACAA;IAAqBA;IAA8BA;;;;;IAHzCA;IAAAA,2EAA8D,aAA9D,EAA8DC,yCAA9D;IAGWD;IAAAA;;;;;;;;;;;;;;;;IApBjDA,4BAAwC,CAAxC,EAAwC,UAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,OAAxC,EAAwC,CAAxC,EAAwC,IAAxC,EAAwC,CAAxC,EAAwC,OAAxC,EAAwC,CAAxC,EAAwC,IAAxC,EAAwC,CAAxC,EAAwC,IAAxC;IAM6BA;IAAgBA;IAEzBA,2BAAI,CAAJ,EAAI,IAAJ;IACSA;IAA4BA;IAErCA;IACIA;IAIAA;IAMJA;IAEJA;IACIA;IACJA;IAEJA,4BAAI,EAAJ,EAAI,IAAJ,EAAI,CAAJ,EAAI,EAAJ,EAAI,UAAJ;IAEkBA;IAAeA;IACzBA;IAAqBA;IAAKA;IAAkBA;IAA4BA;IAG5EA,+BAA2B,EAA3B,EAA2B,UAA3B;IACcA;IAAWA;IACrBA;IAAqBA;IAAIA;IAAkBA;IACMA;IAIzDA,4BAAI,EAAJ,EAAI,IAAJ;IAEQA;IACJA;IAEJA,4BAAI,EAAJ,EAAI,QAAJ,EAAI,EAAJ;IAE0CA;IAAYA;;;;;;IAvCrCA;IAAAA;IAGAA;IAAAA;IAIAA;IAAAA;IAemCA;IAAAA;IAKDA;IAAAA;IAWvCA;IAAAA;;;;;;IAhD5BA;IACIA;IAqDJA;;;;;IArDUA;IAAAA;;;;;;IAjB1BA,+BAAqD,CAArD,EAAqD,KAArD,EAAqD,CAArD,EAAqD,CAArD,EAAqD,OAArD,EAAqD,CAArD,EAAqD,IAArD;IAgBgBA;;IAuDJA;;;;;IAvDuCA;IAAAA;;;;ADRnD,OAAM,MAAOE,kBAAP,CAAyB;EAC7BC,YAAoBC,KAApB,EAAgC;IAAZ;IAEpB,gBAAW,KAAX;IAEA,qBAAgB,KAAKA,KAAL,CAAWC,IAAX,CAAgBR,MAAM,CAACE,eAAD,CAAtB,CAAhB;EAJoC;;EAMpCO,YAAY,CAACC,GAAD,EAAY;IACtB,OAAOC,IAAI,CAACC,KAAL,CAAWF,GAAG,GAAG,QAAjB,CAAP;EACD;;EAEDG,QAAQ;IACN,KAAKC,QAAL,GAAgB,KAAhB;IACA,KAAKP,KAAL,CAAWQ,QAAX,CAAoBd,SAAS,EAA7B;IACA,KAAKa,QAAL,GAAgB,KAAhB;EACD;;AAf4B;;;mBAAlBT,oBAAkBF;AAAA;;;QAAlBE;EAAkBW;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX/BjB;MAGAA;;;;MAHMA;MAGAA;MAAAA","names":["select","invokeAPI","selectDashboard","i0","currentTargetAsset_r3","DashboardComponent","constructor","store","pipe","calculateRam","ram","Math","round","ngOnInit","loading$","dispatch","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/dashboard/view/dashboard.component.ts","/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/dashboard/view/dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { TargetAssetModel } from \"src/app/target-asset/target-asset.dto\";\nimport { invokeAPI } from \"../store/dashboard.action\";\nimport { selectDashboard } from \"../store/dashboard.selector\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  constructor(private store: Store) {}\n\n  loading$ = false;\n\n  targetAssets$ = this.store.pipe(select(selectDashboard));\n\n  calculateRam(ram: number) {\n    return Math.round(ram * 0.000001);\n  }\n\n  ngOnInit(): void {\n    this.loading$ = false;\n    this.store.dispatch(invokeAPI());\n    this.loading$ = false;\n  }\n}\n","<div *ngIf=\"targetAssets$ == null\" class=\"container\">\n    <p> sdfds</p>\n</div>\n<div *ngIf=\"targetAssets$ != null\" class=\"container\">\n    <div class=\"dashboard\">\n        <!-- <form (ngSubmit)=\"add(taskNgForm)\" #taskNgForm=\"ngForm\" #form>\n            <div class=\"input-group\">\n                <input #newTaskNgModel=\"ngModel\" required minlength=\"4\" name=\"taskTitle\" type=\"text\" placeholder=\"Todo\"\n                    [(ngModel)]=\"newTask.title\" />\n                <button [disabled]=\"!form.checkValidity()\" class=\"add-button\">+</button>\n            </div>\n            <div *ngIf=\"newTaskNgModel.invalid && (newTaskNgModel.touched || newTaskNgModel.dirty)\"\n                class=\"validation-error\">\n                <div *ngIf=\"newTaskNgModel.errors?.['required']\"> Task title is required. </div>\n                <div *ngIf=\"newTaskNgModel.errors?.['minlength']\"> Task title must at least have 4 characters. </div>\n            </div>\n        </form> -->\n        <table>\n            <tr>\n                <td *ngFor=\"let currentTargetAsset of targetAssets$ | async;\">\n                    <div *ngIf=\"currentTargetAsset != null\">\n                        <mat-card class=\"card\">\n                            <table>\n                                <tr>\n                                    <table>\n                                        <tr>\n                                            <td> Virtual Machine </td>\n                                        </tr>\n                                        <tr>\n                                            <td> {{currentTargetAsset.name}} </td>\n                                        </tr>\n                                        <tr>\n                                            <td *ngIf=\"currentTargetAsset.status == 'Running'\" class=\"vertical-align\">\n                                                <mat-icon class=\"statusGreen\">check_circle</mat-icon>\n                                                <div class=\"status\"> {{currentTargetAsset.status}} </div>\n                                            </td>\n                                            <td *ngIf=\"currentTargetAsset.status != 'Running'\" class=\"vertical-align\">\n                                                <mat-icon [class.statusStopped]=\"currentTargetAsset.status == 'Stopped'\"\n                                                    [class.statusError]=\"currentTargetAsset.status != 'Stopped'\">error\n                                                </mat-icon>\n                                                <div class=\"status\"> {{currentTargetAsset.status}} </div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <td>\n                                        <img src=\"assets/images/imac.png\" class=\"image\" alt=\"mac\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"vertical-align\">\n                                        <mat-icon>developer_board</mat-icon>\n                                        <div class=\"status\"> CPUs <div class=\"cpu\"> {{ currentTargetAsset.cpu}} </div>\n                                        </div>\n                                    </td>\n                                    <td class=\"vertical-align\">\n                                        <mat-icon>memory icon</mat-icon>\n                                        <div class=\"status\"> RAM <div class=\"cpu\"> {{\n                                                calculateRam(currentTargetAsset.ram)}} MB</div>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <mat-divider class=\"divider\"></mat-divider>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <button [routerLink]=\"['/dashboard/assets/', { id:  currentTargetAsset.id }]\"\n                                        class=\"button\" mat-raised-button> View details</button>\n                                </tr>\n                            </table>\n                        </mat-card>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module"}