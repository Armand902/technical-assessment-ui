{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction DashboardComponent_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Task title is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DashboardComponent_div_10_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \" Task title must at least have 4 characters. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DashboardComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, DashboardComponent_div_10_div_1_Template, 2, 0, \"div\", 11);\n    i0.ɵɵtemplate(2, DashboardComponent_div_10_div_2_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(7);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", _r2.errors == null ? null : _r2.errors[\"minlength\"]);\n  }\n}\n\nfunction DashboardComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const task_r7 = ctx.$implicit;\n    const i_r8 = ctx.index;\n    i0.ɵɵclassProp(\"even\", i_r8 % 2 == 0)(\"odd\", i_r8 % 2 == 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"is-done\", task_r7.isDone);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(task_r7.title);\n  }\n}\n\nexport class DashboardComponent {\n  constructor() {}\n\n  ngOnInit() {}\n\n}\n\nDashboardComponent.ɵfac = function DashboardComponent_Factory(t) {\n  return new (t || DashboardComponent)();\n};\n\nDashboardComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DashboardComponent,\n  selectors: [[\"dashboard\"]],\n  decls: 15,\n  vars: 6,\n  consts: [[1, \"container\"], [1, \"todo-list\"], [3, \"ngSubmit\"], [\"taskNgForm\", \"ngForm\", \"form\", \"\"], [1, \"input-group\"], [\"required\", \"\", \"minlength\", \"4\", \"name\", \"taskTitle\", \"type\", \"text\", \"placeholder\", \"Todo\", 3, \"ngModel\", \"ngModelChange\"], [\"newTaskNgModel\", \"ngModel\"], [1, \"add-button\", 3, \"disabled\"], [\"class\", \"validation-error\", 4, \"ngIf\"], [3, \"even\", \"odd\", 4, \"ngFor\", \"ngForOf\"], [1, \"validation-error\"], [4, \"ngIf\"]],\n  template: function DashboardComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r9 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n      i0.ɵɵlistener(\"ngSubmit\", function DashboardComponent_Template_form_ngSubmit_2_listener() {\n        i0.ɵɵrestoreView(_r9);\n\n        const _r0 = i0.ɵɵreference(3);\n\n        return i0.ɵɵresetView(ctx.add(_r0));\n      });\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"input\", 5, 6);\n      i0.ɵɵlistener(\"ngModelChange\", function DashboardComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.newTask.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵtext(9, \"+\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(10, DashboardComponent_div_10_Template, 3, 2, \"div\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"table\")(12, \"tr\");\n      i0.ɵɵtemplate(13, DashboardComponent_td_13_Template, 3, 7, \"td\", 9);\n      i0.ɵɵpipe(14, \"async\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(4);\n\n      const _r2 = i0.ɵɵreference(7);\n\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.newTask.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !_r1.checkValidity());\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", _r2.invalid && (_r2.touched || _r2.dirty));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(14, 4, ctx.tasks));\n    }\n  },\n  dependencies: [i1.NgForOf, i1.NgIf, i1.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":";;;;;IAUgBA;IAAkDA;IAAwBA;;;;;;IAC1EA;IAAmDA;IAA4CA;;;;;;IAHnGA;IAEIA;IACAA;IACJA;;;;;;;;IAFUA;IAAAA;IACAA;IAAAA;;;;;;IAKNA,2BAC6B,CAD7B,EAC6B,GAD7B;IAEqCA;IAAgBA;;;;;;IAFCA,sCAAyB,KAAzB,EAAyBC,aAAzB;IAE/CD;IAAAA;IAA8BA;IAAAA;;;;ACXrD,OAAM,MAAOE,kBAAP,CAAyB;EAC7BC,eAAgB;;EAEhBC,QAAQ,IAAW;;AAHU;;;mBAAlBF;AAAkB;;;QAAlBA;EAAkBG;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MDP/BT,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,MAAvB,EAAuB,CAAvB,EAAuB,CAAvB;MAEcA;QAAAA;;QAAA;;QAAA,OAAYA,4BAAZ;MAA2B,CAA3B;MACFA,+BAAyB,CAAzB,EAAyB,OAAzB,EAAyB,CAAzB,EAAyB,CAAzB;MAEQA;QAAA;MAAA;MADJA;MAEAA;MAA8DA;MAACA;MAEnEA;MAKJA;MACAA,+BAAO,EAAP,EAAO,IAAP;MAEQA;;MAIJA;;;;;;;;MAfQA;MAAAA;MACIA;MAAAA;MAENA;MAAAA;MAQmBA;MAAAA","names":["i0","i_r8","DashboardComponent","constructor","ngOnInit","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/dashboard/view/dashboard.component.html","/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/dashboard/view/dashboard.component.ts"],"sourcesContent":["<div class=\"container\">\n    <div class=\"todo-list\">\n        <form (ngSubmit)=\"add(taskNgForm)\" #taskNgForm=\"ngForm\" #form>\n            <div class=\"input-group\">\n                <input #newTaskNgModel=\"ngModel\" required minlength=\"4\" name=\"taskTitle\" type=\"text\" placeholder=\"Todo\"\n                    [(ngModel)]=\"newTask.title\" />\n                <button [disabled]=\"!form.checkValidity()\" class=\"add-button\">+</button>\n            </div>\n            <div *ngIf=\"newTaskNgModel.invalid && (newTaskNgModel.touched || newTaskNgModel.dirty)\"\n                class=\"validation-error\">\n                <div *ngIf=\"newTaskNgModel.errors?.['required']\"> Task title is required. </div>\n                <div *ngIf=\"newTaskNgModel.errors?.['minlength']\"> Task title must at least have 4 characters. </div>\n            </div>\n        </form>\n        <table>\n            <tr>\n                <td *ngFor=\"let task of tasks | async; let i = index\" [class.even]=\"i % 2 == 0\"\n                    [class.odd]=\"i % 2 == 1\">\n                    <p [class.is-done]=\"task.isDone\">{{ task.title }}</p>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\"./dashboard.component.css\"],\n})\nexport class DashboardComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n"]},"metadata":{},"sourceType":"module"}