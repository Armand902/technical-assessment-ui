{"ast":null,"code":"import { select } from \"@ngrx/store\";\nimport { selectDashboard } from \"../dashboard/store/dashboard.selector\";\nimport { TargetAssetModel } from \"./target-asset.dto\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"@angular/router\";\n\nfunction TargetAssetComponent_td_4_div_1_td_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 7)(1, \"mat-icon\", 12);\n    i0.ɵɵtext(2, \"check_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r1.status, \" \");\n  }\n}\n\nfunction TargetAssetComponent_td_4_div_1_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 7)(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"error \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"statusStopped\", currentTargetAsset_r1.status == \"Stopped\")(\"statusError\", currentTargetAsset_r1.status != \"Stopped\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r1.status, \" \");\n  }\n}\n\nconst _c0 = function () {\n  return {\n    id: \"4\"\n  };\n};\n\nconst _c1 = function (a1) {\n  return [\"/dashboard/assets/\", a1];\n};\n\nfunction TargetAssetComponent_td_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"mat-card\", 4)(2, \"table\")(3, \"tr\")(4, \"table\")(5, \"tr\")(6, \"td\");\n    i0.ɵɵtext(7, \" Virtual Machine \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tr\")(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"tr\");\n    i0.ɵɵtemplate(12, TargetAssetComponent_td_4_div_1_td_12_Template, 5, 1, \"td\", 5);\n    i0.ɵɵtemplate(13, TargetAssetComponent_td_4_div_1_td_13_Template, 5, 5, \"td\", 5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"td\");\n    i0.ɵɵelement(15, \"img\", 6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"tr\")(17, \"td\", 7)(18, \"mat-icon\");\n    i0.ɵɵtext(19, \"developer_board\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 8);\n    i0.ɵɵtext(21, \" CPUs \");\n    i0.ɵɵelementStart(22, \"div\", 9);\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"td\", 7)(25, \"mat-icon\");\n    i0.ɵɵtext(26, \"memory icon\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 8);\n    i0.ɵɵtext(28, \" RAM \");\n    i0.ɵɵelementStart(29, \"div\", 9);\n    i0.ɵɵtext(30);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(31, \"tr\")(32, \"td\");\n    i0.ɵɵelement(33, \"mat-divider\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"tr\")(35, \"button\", 11);\n    i0.ɵɵtext(36, \" View details\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r1.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", currentTargetAsset_r1.status == \"Running\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", currentTargetAsset_r1.status != \"Running\");\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate1(\" \", currentTargetAsset_r1.cpu, \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.calculateRam(currentTargetAsset_r1.ram), \" MB\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(7, _c1, i0.ɵɵpureFunction0(6, _c0)));\n  }\n}\n\nfunction TargetAssetComponent_td_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtemplate(1, TargetAssetComponent_td_4_div_1_Template, 37, 9, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const currentTargetAsset_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", currentTargetAsset_r1 != null);\n  }\n}\n\nexport class TargetAssetComponent {\n  //public targetAsset$!: TargetAssetModel;\n  constructor(store, route) {\n    this.store = store;\n    this.route = route;\n    this.id = 0;\n    this.targetAssets$ = this.store.pipe(select(selectDashboard));\n  }\n\n  ngOnInit() {\n    this.id = this.route.snapshot.params[\"id\"];\n    this.targetAssets$.subscribe(value => {\n      if (value != null) {\n        value.map(x => {\n          if (x != null && x.id == this.id) {\n            this.asset$ = new TargetAssetModel(x.id, x.isStartable, x.location, x.owner, x.createdBy, x.name, x.status, x.tags, x.cpu, x.ram, x.createdAt, x.parentId);\n          }\n        });\n      }\n    });\n  }\n\n}\n\nTargetAssetComponent.ɵfac = function TargetAssetComponent_Factory(t) {\n  return new (t || TargetAssetComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n};\n\nTargetAssetComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TargetAssetComponent,\n  selectors: [[\"app-target-asset\"]],\n  decls: 6,\n  vars: 3,\n  consts: [[1, \"container\"], [1, \"dashboard\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"card\"], [\"class\", \"vertical-align\", 4, \"ngIf\"], [\"src\", \"assets/images/imac.png\", \"alt\", \"mac\", 1, \"image\"], [1, \"vertical-align\"], [1, \"status\"], [1, \"cpu\"], [1, \"divider\"], [\"mat-raised-button\", \"\", 1, \"button\", 3, \"routerLink\"], [1, \"statusGreen\"]],\n  template: function TargetAssetComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"table\")(3, \"tr\");\n      i0.ɵɵtemplate(4, TargetAssetComponent_td_4_Template, 2, 1, \"td\", 2);\n      i0.ɵɵpipe(5, \"async\");\n      i0.ɵɵelementEnd()()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(5, 1, ctx.targetAssets$));\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0YXJnZXQtYXNzZXQuY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,MAAT,QAA8B,aAA9B;AACA,SAASC,eAAT,QAAgC,uCAAhC;AAGA,SAASC,gBAAT,QAAiC,oBAAjC;;;;;;;ICwB4CC,8BAA0E,CAA1E,EAA0E,UAA1E,EAA0E,EAA1E;IACkCA;IAAYA;IAC1CA;IAAqBA;IAA8BA;;;;;IAA9BA;IAAAA;;;;;;IAEzBA,8BAA0E,CAA1E,EAA0E,UAA1E;IAEqEA;IACjEA;IACAA;IAAqBA;IAA8BA;;;;;IAHzCA;IAAAA,2EAA8D,aAA9D,EAA8DC,yCAA9D;IAGWD;IAAAA;;;;;;;;;;;;;;;;IApBjDA,4BAAwC,CAAxC,EAAwC,UAAxC,EAAwC,CAAxC,EAAwC,CAAxC,EAAwC,OAAxC,EAAwC,CAAxC,EAAwC,IAAxC,EAAwC,CAAxC,EAAwC,OAAxC,EAAwC,CAAxC,EAAwC,IAAxC,EAAwC,CAAxC,EAAwC,IAAxC;IAM6BA;IAAgBA;IAEzBA,2BAAI,CAAJ,EAAI,IAAJ;IACSA;IAA4BA;IAErCA;IACIA;IAIAA;IAMJA;IAEJA;IACIA;IACJA;IAEJA,4BAAI,EAAJ,EAAI,IAAJ,EAAI,CAAJ,EAAI,EAAJ,EAAI,UAAJ;IAEkBA;IAAeA;IACzBA;IAAqBA;IAAKA;IAAkBA;IAA4BA;IAG5EA,+BAA2B,EAA3B,EAA2B,UAA3B;IACcA;IAAWA;IACrBA;IAAqBA;IAAIA;IAAkBA;IACMA;IAIzDA,4BAAI,EAAJ,EAAI,IAAJ;IAEQA;IACJA;IAEJA,4BAAI,EAAJ,EAAI,QAAJ,EAAI,EAAJ;IAE2BA;IAAYA;;;;;;IAvCtBA;IAAAA;IAGAA;IAAAA;IAIAA;IAAAA;IAemCA;IAAAA;IAKDA;IAAAA;IAWvCA;IAAAA;;;;;;IAhD5BA;IACIA;IAqDJA;;;;;IArDUA;IAAAA;;;;ADJ1B,OAAM,MAAOE,oBAAP,CAA2B;EAC/B;EAEAC,YAAoBC,KAApB,EAA0CC,KAA1C,EAA+D;IAA3C;IAAsB;IAE1C,UAAa,CAAb;IACA,qBAAgB,KAAKD,KAAL,CAAWE,IAAX,CAAgBT,MAAM,CAACC,eAAD,CAAtB,CAAhB;EAHmE;;EAMnES,QAAQ;IACN,KAAKC,EAAL,GAAU,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,MAApB,CAA2B,IAA3B,CAAV;IAEA,KAAKC,aAAL,CAAmBC,SAAnB,CAA8BC,KAAD,IAAU;MACrC,IAAIA,KAAK,IAAI,IAAb,EAAmB;QACjBA,KAAK,CAACC,GAAN,CAAWC,CAAD,IAAM;UACd,IAAIA,CAAC,IAAI,IAAL,IAAaA,CAAC,CAACP,EAAF,IAAQ,KAAKA,EAA9B,EAAkC;YAChC,KAAKQ,MAAL,GAAc,IAAIjB,gBAAJ,CACZgB,CAAC,CAACP,EADU,EAEZO,CAAC,CAACE,WAFU,EAGZF,CAAC,CAACG,QAHU,EAIZH,CAAC,CAACI,KAJU,EAKZJ,CAAC,CAACK,SALU,EAMZL,CAAC,CAACM,IANU,EAOZN,CAAC,CAACO,MAPU,EAQZP,CAAC,CAACQ,IARU,EASZR,CAAC,CAACS,GATU,EAUZT,CAAC,CAACU,GAVU,EAWZV,CAAC,CAACW,SAXU,EAYZX,CAAC,CAACY,QAZU,CAAd;UAcD;QACF,CAjBD;MAkBD;IACF,CArBD;EAsBD;;AAlC8B;;;mBAApBzB,sBAAoBF;AAAA;;;QAApBE;EAAoB0B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbjChC,+BAAuB,CAAvB,EAAuB,KAAvB,EAAuB,CAAvB,EAAuB,CAAvB,EAAuB,OAAvB,EAAuB,CAAvB,EAAuB,IAAvB;MAgBgBA;;MAuDJA;;;;MAvDuCA;MAAAA","names":["select","selectDashboard","TargetAssetModel","i0","currentTargetAsset_r1","TargetAssetComponent","constructor","store","route","pipe","ngOnInit","id","snapshot","params","targetAssets$","subscribe","value","map","x","asset$","isStartable","location","owner","createdBy","name","status","tags","cpu","ram","createdAt","parentId","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/target-asset/target-asset.component.ts","/Users/armandleroux/technical-assignment/technical-assessment-ui/src/app/target-asset/target-asset.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { select, Store } from \"@ngrx/store\";\nimport { selectDashboard } from \"../dashboard/store/dashboard.selector\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { filter, from, map, Observable, pipe, take } from \"rxjs\";\nimport { TargetAssetModel } from \"./target-asset.dto\";\nimport { invokeAPI } from \"../dashboard/store/dashboard.action\";\n\n@Component({\n  selector: \"app-target-asset\",\n  templateUrl: \"./target-asset.component.html\",\n  styleUrls: [\"./target-asset.component.css\"],\n})\nexport class TargetAssetComponent implements OnInit {\n  //public targetAsset$!: TargetAssetModel;\n\n  constructor(private store: Store, private route: ActivatedRoute) {}\n\n  id: number = 0;\n  targetAssets$ = this.store.pipe(select(selectDashboard));\n  asset$?: TargetAssetModel;\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.params[\"id\"];\n\n    this.targetAssets$.subscribe((value) => {\n      if (value != null) {\n        value.map((x) => {\n          if (x != null && x.id == this.id) {\n            this.asset$ = new TargetAssetModel(\n              x.id,\n              x.isStartable,\n              x.location,\n              x.owner,\n              x.createdBy,\n              x.name,\n              x.status,\n              x.tags,\n              x.cpu,\n              x.ram,\n              x.createdAt,\n              x.parentId\n            );\n          }\n        });\n      }\n    });\n  }\n}\n","<div class=\"container\">\n    <div class=\"dashboard\">\n        <!-- <form (ngSubmit)=\"add(taskNgForm)\" #taskNgForm=\"ngForm\" #form>\n            <div class=\"input-group\">\n                <input #newTaskNgModel=\"ngModel\" required minlength=\"4\" name=\"taskTitle\" type=\"text\" placeholder=\"Todo\"\n                    [(ngModel)]=\"newTask.title\" />\n                <button [disabled]=\"!form.checkValidity()\" class=\"add-button\">+</button>\n            </div>\n            <div *ngIf=\"newTaskNgModel.invalid && (newTaskNgModel.touched || newTaskNgModel.dirty)\"\n                class=\"validation-error\">\n                <div *ngIf=\"newTaskNgModel.errors?.['required']\"> Task title is required. </div>\n                <div *ngIf=\"newTaskNgModel.errors?.['minlength']\"> Task title must at least have 4 characters. </div>\n            </div>\n        </form> -->\n        <table>\n            <tr>\n                <td *ngFor=\"let currentTargetAsset of targetAssets$ | async;\">\n                    <div *ngIf=\"currentTargetAsset != null\">\n                        <mat-card class=\"card\">\n                            <table>\n                                <tr>\n                                    <table>\n                                        <tr>\n                                            <td> Virtual Machine </td>\n                                        </tr>\n                                        <tr>\n                                            <td> {{currentTargetAsset.name}} </td>\n                                        </tr>\n                                        <tr>\n                                            <td *ngIf=\"currentTargetAsset.status == 'Running'\" class=\"vertical-align\">\n                                                <mat-icon class=\"statusGreen\">check_circle</mat-icon>\n                                                <div class=\"status\"> {{currentTargetAsset.status}} </div>\n                                            </td>\n                                            <td *ngIf=\"currentTargetAsset.status != 'Running'\" class=\"vertical-align\">\n                                                <mat-icon [class.statusStopped]=\"currentTargetAsset.status == 'Stopped'\"\n                                                    [class.statusError]=\"currentTargetAsset.status != 'Stopped'\">error\n                                                </mat-icon>\n                                                <div class=\"status\"> {{currentTargetAsset.status}} </div>\n                                            </td>\n                                        </tr>\n                                    </table>\n                                    <td>\n                                        <img src=\"assets/images/imac.png\" class=\"image\" alt=\"mac\">\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td class=\"vertical-align\">\n                                        <mat-icon>developer_board</mat-icon>\n                                        <div class=\"status\"> CPUs <div class=\"cpu\"> {{ currentTargetAsset.cpu}} </div>\n                                        </div>\n                                    </td>\n                                    <td class=\"vertical-align\">\n                                        <mat-icon>memory icon</mat-icon>\n                                        <div class=\"status\"> RAM <div class=\"cpu\"> {{\n                                                calculateRam(currentTargetAsset.ram)}} MB</div>\n                                        </div>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td>\n                                        <mat-divider class=\"divider\"></mat-divider>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <button [routerLink]=\"['/dashboard/assets/', { id: '4' }]\" class=\"button\"\n                                        mat-raised-button> View details</button>\n                                </tr>\n                            </table>\n                        </mat-card>\n                    </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module"}